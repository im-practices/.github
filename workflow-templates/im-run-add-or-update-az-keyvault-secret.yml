# Workflow Code: CockySquirrel_v16    DO NOT REMOVE
# Purpose:
#    Adds or updates an azure KeyVault secret in the specified
#    environment when someone kicks it off manually.
#
# Frequency:
#    - This workflow can be duplicated for each keyvault this repository contains
#
# Projects to use this Template with:
#    - Terraform (Optional Template)
#    - Azure App Service or Function (Optional Template)
#
# TODO: Prerequisites:
#    - Ensure each of the repo-level and env-level secrets used in this workflow have been populated by an admin in your repository.

name: Runbook - Add or update azure keyvault secret # TODO: You may wish to add the name of the key vault to this name and the file name if there are multiple key vaults this repository can add secrets to
run-name: Add or Update ${{ inputs.secret_name }} in ${{ inputs.environment }}
on:
  workflow_dispatch:
    inputs:
      secret_name:
        description: The name of the secret to add, azure requires it conform to the following pattern - ^[0-9a-zA-Z-]+$
        required: true
      secret_value:
        description: The value of the secret
        required: true
      environment:
        description: The environment to add the secret to
        required: true
        default: prod
        type: choice
        options: # TODO: Update for the environments that are available
          - dev
          - qa
          - stage
          - demo
          - uat
          - prod

permissions:
  # Required for secretless azure access and deploys
  id-token: write
  contents: read

jobs:
  set-secret:
    runs-on: [self-hosted, im-linux]

    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Mask the secret value
        uses: actions/github-script@v7
        with:
          script: |
            core.info(`Masking the value for ${context.payload.inputs.secret_name} so it is not exposed.`);
            core.setSecret(context.payload.inputs.secret_value);
      
      - run: |
          echo $'
          | Build Arguments | Value                                    |
          | ---             |  ---                                     |
          | Environment     | `${{ github.event.inputs.environment }}` |
          | Secret Name     | `${{ github.event.inputs.secret_name }}` |' >> $GITHUB_STEP_SUMMARY
          
      # For more information and best practices on the usage and options available
      # for this action go to: https://github.com/im-open/set-environment-variables-by-scope#usage-instructions
      - name: Set Variables
        uses: im-open/set-environment-variables-by-scope@v1.1
        with:
          scope: ${{ github.event.inputs.environment }}
        env:
          # TODO: For the following keyvault name inputs, fill in the value if you have the environment and delete the environment if it does not exist
          KEYVAULT_NAME@dev: ''
          KEYVAULT_NAME@qa: ''
          KEYVAULT_NAME@stage: ''
          KEYVAULT_NAME@demo: ''
          KEYVAULT_NAME@uat: ''
          KEYVAULT_NAME@prod: ''

      - name: AZ Login
        id: login
        uses: azure/login@v2
        with:
          # This is an org-level variable
          tenant-id: ${{ vars.ARM_TENANT_ID }}
          # These are env-level variables
          subscription-id: ${{ vars.ARM_SUBSCRIPTION_ID }}
          client-id: ${{ vars.ARM_CLIENT_ID }}

      - name: keyvault add or update secret
        # ARM_SUBSCRIPTION_ID is an env-level variable
        run: az keyvault secret set --name ${{ github.event.inputs.secret_name }} --vault-name ${{ env.KEYVAULT_NAME }} --subscription ${{ vars.ARM_SUBSCRIPTION_ID }} --value "${{ github.event.inputs.secret_value }}"

      - name: Azure logout
        if: always() && steps.login.outcome == 'success'
        run: |
          az logout
          az cache purge
          az account clear
