# Workflow Code: BubblyGreyhound_v20    DO NOT REMOVE
# Purpose:
#    Checks out the repository and deploys a directory to the
#    specified storage account when someone kicks it off manually.
#
# Frequency:
#    - This workflow can be duplicated for as many storage
#      account deployments that the repository contains
#
# Projects to use this Template with:
#    - Storage Account Deployment (Core Template)
#
# TODO: Prerequisites:
#    - Ensure each of the repo-level and env-level secrets used in this workflow have been populated by an admin in your repository.
#    - Set up a deployment board if it does not already exist: https://github.com/im-practices/git-er-done/blob/main/actions/deployment-board.md

name: Deploy Files to Azure Storage
run-name: Deploy ${{ inputs.branch-tag-sha }} Files to ${{ inputs.environment }} AZ Storage
# TODO: Evaluate the appropriate triggers
on:
  workflow_dispatch:
    inputs:
      branch-tag-sha:
        description: The branch, tag or sha of the files that should be deployed to the Dev environment.
        required: true
      environment:
        description: The environment to deploy to
        required: true
        type: choice
        options: # TODO: Update for the environments that are available
          - dev
          - qa
          - stage
          - demo
          - uat
          - prod

env:
  ENVIRONMENT: ${{ github.event.inputs.environment }}
  GITHUB_REF: ${{ github.event.inputs.branch-tag-sha }}
  STORAGE_ACCOUNT_NAME: '' # TODO: Add the appropriate storage account name
  TARGET_CONTAINER: '' # TODO: Add the appropriate target container in the stg account
  SOURCE_DIRECTORY: '' # TODO: Add the appropriate source directory
  DEPLOY_BOARD_NUM: '' # TODO: Add the automated deployment board number or remove if not using an automated deployment project board.

jobs:
  deploy-to-azure:
    runs-on: [self-hosted, ubuntu-20.04]

    environment: ${{ github.event.inputs.environment }} # Use inputs context because env context is not available to environment:

    steps:
      - run: |
          echo $'
          | Build Arguments | Value                    |
          | ---             |  ---                     |
          | Environment     | `${{ env.ENVIRONMENT }}` |
          | Branch/Tag/Sha  | `${{ env.GITHUB_REF }}`  |' >> $GITHUB_STEP_SUMMARY
                
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ env.GITHUB_REF }}
          fetch-depth: 0

      - name: Verify Tag Exists
        uses: im-open/verify-git-ref@v1.2.0
        with:
          branch-tag-sha: ${{ env.GITHUB_REF }}

      - name: AZ Login
        id: login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }} # This is an env-level secret

      # This call uses RBAC (--auth-mode login) to upload files to the azure storage account.
      # No other key or connection string is needed. In order to push files to a stg account
      # the SP that authenticates in the step above needs an additional permission (Storage
      # Blob Data Contributor).  Without that permission, this call will not succeed.
      # https://docs.microsoft.com/en-us/azure/storage/blobs/assign-azure-role-data-access?tabs=portal
      - name: Upload Files
        run: |
          az storage blob upload-batch \
            --auth-mode login \
            --account-name '${{ env.STORAGE_ACCOUNT_NAME }}' \
            -d '${{ env.TARGET_CONTAINER }}' \
            -s '${{ env.SOURCE_DIRECTORY }}'

      # https://github.com/im-practices/git-er-done/blob/main/actions/deployment-board.md
      - name: Update Deployment Board
        if: always()
        uses: im-open/update-deployment-board@v1.5.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }} # Special per-job token generated by GH for interacting with the repo
          environment: ${{ env.ENVIRONMENT }}
          board-number: ${{ env.DEPLOY_BOARD_NUM }}
          ref: ${{ env.GITHUB_REF }}
          #deployable-type: '' # TODO:  If there are multiple deployables in the repository, add a string type like MFE/DB/API
          deploy-status: ${{ job.status }}
          timezone: 'america/denver' # TODO: Verify timezone

      - name: Azure logout
        if: always() && steps.login.outcome == 'success'
        run: |
          az logout
          az cache purge
          az account clear
