# Workflow Code: FrazzledFerret_v13    DO NOT REMOVE
# Purpose:
#    Removes a lock from the terraform state when someone kicks it off manually.
#
# Frequency:
#    - This workflow should only be used once per repository
#
# Projects to use this Template with:
#    - Terraform (Core Template)
#
# TODO Prerequisites
#    - Ensure each of the repo-level and env-level secrets used in this workflow have been populated by an admin in your repository.

name: Unlock Terraform State
on:
  workflow_dispatch:
    inputs:
      lock-id:
        description: The lock ID that needs to be removed.  Terraform provides this value (lock info.ID) in the message indicating there was an error acquiring the state lock.
        required: true
      environment:
        description: The environment the lock should be removed in
        required: true
        type: choice
        options: # TODO: Update for the environments that are available
          - dev
          - qa
          - stage
          - demo
          - uat
          - prod
      branch-tag-sha:
        description: The branch, tag or sha of the terraform that is currently in the environment where the lock is.  This is needed to do a terraform init with the appropriate code.
        required: true

env:
  ENVIRONMENT: ${{ github.event.inputs.environment }}
  GITHUB_REF: ${{ github.event.inputs.branch-tag-sha  }}
  # The following ARM_* secrets are org-level secrets
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_ENVIRONMENT: 'public'
  TF_IN_AUTOMATION: 'true'
  TF_VERSION: '~>1.0.5' #TODO:  Verify your version of terraform.
  # The following SSH_* secrets are org-level secrets
  SSH_KEY_STORAGE_ACCOUNT: ${{ secrets.SSH_STORAGE_ACCOUNT }}
  SSH_KEY_NETWORK_INFO: ${{ secrets.SSH_NETWORK_INFO }}
  SSH_DEPLOY_KEY_INFO: |
    [
      { "orgAndRepo": "im-platform/storage-account-network-rules", "envName" : "SSH_KEY_STORAGE_ACCOUNT" },
      { "orgAndRepo": "im-platform/network-information", "envName" : "SSH_KEY_NETWORK_INFO" }
    ]

jobs:
  tf-unlock-state:
    runs-on: [self-hosted, ubuntu-20.04]
    environment: ${{ github.event.inputs.environment }} # Use inputs context because env context is not available to environment:

    defaults:
      run:
        shell: bash
        working-directory: './${{ env.ENVIRONMENT }}' # TODO: Verify this directory (./dev, ./qa, ./stage, ./prod, ./demo, ./uat) will be correct for your project

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ env.GITHUB_REF }}

      - run: echo "The current environment is ${{ env.ENVIRONMENT }}.  The branch/tag/sha is ${{ env.GITHUB_REF }}."

      # Allows pulling modules from the repo instead of artifactory
      - name: Setup SSH Keys and known_hosts
        uses: im-open/setup-deploy-keys@v1.0.6
        with:
          deploy-key-info: ${{ env.SSH_DEPLOY_KEY_INFO }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: '${{ env.TF_VERSION }}'

      - name: Terraform Init
        run: terraform init

      - name: Terraform Unlock State
        run: terraform force-unlock -force ${{ github.event.inputs.lock-id }}
