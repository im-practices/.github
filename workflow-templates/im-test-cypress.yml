# Workflow Code: SurprisedHedgehog_v10    DO NOT REMOVE
# Purpose:
#    Runs the Cypress script specified in the workflow when commits
#    are pushed to the PR or when someone kicks it off manually.
#
# Frequency:
#    - This workflow can be duplicated once per cypress project that you wish to run independently.
#
# Projects to use this Template with:
#    - Azure App Service or Function (Optional Template)
#    - On-Prem Site                  (Optional Template)
#
# TODO Prerequisites:
#    - If the project contains a local nuget.config remove it.  It interferes with restoring packages on the GitHub Action runners.
#    - In order to use this workflow a few changes need to be made to the cypress test configuration:
#      1. Make the following npm package changes in your cypress test directory
#         npm uninstall mocha-teamcity-reporter
#         npm install --save-dev mochawesome mochawesome-merge mochawesome-report-generator
#      2. Modify the cypress run section of the ci script by replacing the '--reporter ./mocha-teamcity-reporter' with '--reporter mochawesome --reporter-options overwrite=false,html=false,json=true'. For instance:
#         old: "cy:ci" : "....&& cypress run --project ./ --reporter ./mocha-teamcity-reporter \"",
#         new: "cy:ci" : "....&& cypress run --project ./ --reporter mochawesome --reporter-options overwrite=false,html=false,json=true \"",
#      3. Add the following pre-ci script.  Your name will vary based on your cypress ci script name.  This removes results between test runs.
#         "precy:ci": "rm -rf mochawesome-report/",
#      4. Add the following script that merges all test json files and generates an html report.  Your name may vary based on your project conventions.  If the output file or results dir are changed, update the env values in the workflow.
#         "cy:report": "mochawesome-merge mochawesome-report/*.json > merged-results.json && marge --reportDir cypress-results merged-results.json",
#                                                                                             ^^ marge is not a typo, it's a command for the "mochawesome report generator"

name: Run Cypress Tests

# TODO: Verify Triggers
on:
  # Having two workflows with the same 'pull_request' trigger (dotnet ci and cypress) will result in all status checks
  # (like jest tests, dotnet coverage, sam.yaml validation, etc.) showing on one workflow run or the other and the
  # workflow it shows on may change each time a commit is pushed.  To stop this from happening this workflow could be
  # kicked off with a 'repository_dispatch' trigger from the CI build, or the 'pull_request trigger' could be removed
  # and this workflow could be run manually with 'workflow_dispatch' or a new 'schedule' trigger could be added.
  # Another option is using this as a reusable workflow: https://docs.github.com/en/actions/learn-github-actions/reusing-workflows
  pull_request:
  workflow_dispatch:

env:
  READ_PKG_TOKEN: ${{ secrets.READ_PKG_TOKEN }} # This is an org-level secret
  JS_TEST_DIR: '' # TODO: Set to the directory containing the js tests like tests/cypress.
  SOLUTION_FILE: '' # TODO: Set to name (not including path) of solution file.
  DOTNET_VERSION: '' # TODO: Add the .net version
  CYPRESS_CI_SCRIPT: '' # TODO: Add cypress script name, common ones: cypress-ci, cy:ci, cypress-ci-headless, cy:react-mfe:ci, cypress-ci-firefox, cypress-ci-edge, cy:smoke-dev
  CYPRESS_REPORT_SCRIPT: 'cy:report' #TODO:  Add the name of the npm script that merges the files and creates an html report, if you copied the one above it is cy:report
  CYPRESS_RESULTS_FILE: 'merged-results.json' # TODO: Update this value if it was added as something different in the npm report script
  CYPRESS_REPORT_DIR: 'cypress-results' # TODO: Update this value if it was added as something different in the npm report script

jobs:
  run-cypress:
    runs-on: [self-hosted, windows-2019]

    defaults:
      run:
        shell: bash
        working-directory: ${{ env.JS_TEST_DIR }}

    # environment: '' # TODO:  If you have additional steps that use environment-level secrets fill this in, otherwise delete it

    # TODO:  If your cypress tests are for an app that needs access to azure this syntax with the environment variables
    #        ensures your app can connect to azure resources without clashing with the runner machine's azure identity.
    #        If your tests do not need to connect to Azure, these environment variables can be removed.
    # env:
    #   AZURE_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
    #   AZURE_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
    #   AZURE_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - uses: actions/checkout@v2

      # TODO: If you are using any nuget/npm packages from GitHub Packages uncomment this step
      # - name: Authenticate with GitHub Packages
      #   uses: im-open/authenticate-with-gh-package-registries@v1.0.5
      #   with:
      #     read-pkg-token: ${{ secrets.READ_PKG_TOKEN }} # This is an org-level secret
      #     orgs: 'im-client,im-enrollment,im-practices' # TODO: Verify list of orgs packages will be pulled from

      - name: Restore npm packages
        run: npm install

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: dotnet build
        working-directory: . # TODO: verify the root is the correct location of the solution file
        run: dotnet build ${{ env.SOLUTION_FILE }}

      # TODO: Add any additional setup that might be needed like the following.  Delete if not needed
      # - name: Additional Setup
      #   run: |
      #     set ConsentStorageSettings:ConnectionString=Server=localhost;....
      #     set PERCY_TOKEN=45a1a9c86482ce1108f79....
      #     npm run ntlm-proxy

      - name: Run cypress
        id: cypress
        continue-on-error: true
        run: npm run ${{ env.CYPRESS_CI_SCRIPT }}

      - name: Merge json files and create html report
        run: npm run ${{ env.CYPRESS_REPORT_SCRIPT }}

      - name: Create Status check based on merged cypress results
        id: process-cypress
        uses: im-open/process-cypress-test-results@v2.0.6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }} # Special per-job token generated by GH for interacting with the repo
          results-file: '${{ env.JS_TEST_DIR }}/${{ env.CYPRESS_RESULTS_FILE }}'
          report-name: 'Cypress ${{ github.run_number }}'
          # TODO: Verify whether you want status checks or pr comments with the results.
          create-status-check: true
          create-pr-comment: true
          # update-comment-if-one-exists: false # TODO: By default this action creates one comment and updates it for each run.  Uncomment if you wish to have one new comment for every workflow run.
          ignore-test-failures: true
          timezone: 'america/denver' # TODO: Verify timezone

      - name: Upload cypress screenshots if there are test failures
        if: steps.cypress.outcome == 'failure'
        uses: actions/upload-artifact@v2
        with:
          name: Failed Cypress Test Screenshots
          path: ${{ env.JS_TEST_DIR }}/cypress/screenshots/

      - name: Upload Cypress Results Report
        uses: actions/upload-artifact@v2
        with:
          name: Cypress Results ${{ github.run_number }}
          path: |
            ${{ env.JS_TEST_DIR }}/${{ env.CYPRESS_REPORT_DIR }}/
            ${{ env.JS_TEST_DIR }}/${{ env.CYPRESS_RESULTS_FILE }}

      - name: Fail if cypress errors
        if: steps.cypress.outcome == 'failure'
        run: |
          echo "The cypress tests have failures"
          exit 1
