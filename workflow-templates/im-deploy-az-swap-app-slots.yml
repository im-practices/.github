# Workflow Code: IrritatedHyena_v13    DO NOT REMOVE
# Purpose:
#    Swaps deployment slots in a specified environment for an Azure App Service
#    or Function outside of a deployment when someone kicks it off manually.
#
# Frequency:
#    - This workflow can be duplicated once per app service or function
#
# Projects to use this Template with:
#    - Azure App Service or Function (Optional Template)
#
# TODO: Prerequisites:
#    - Ensure each of the repo-level and env-level secrets used in this workflow have been populated by an admin in your repository.

name: Swap Azure App Slots
run-name: Swap ${{ inputs.environment }} AZ App Slots
# This workflow can be kicked off manually and it can also be kicked off automatically from
# another workflow by using the repository_dispatch event trigger.  This workflow is designed
# to know about each of your environments, so the only thing you need to input is the
# environment where slots will be toggled.

on:
  workflow_dispatch:
    inputs:
      environment:
        description: The environment where slots are being swapped
        required: true
        type: choice
        options: # TODO: Update for the environments that are available
          - dev
          - qa
          - stage
          - demo
          - uat
          - prod
      open-pagerduty-window:
        description: Open a pagerduty maintenance window
        required: true
        default: 'false'
        type: boolean
  # When using repository dispatch, the payload must have the following properties:
  # { environment: 'dev|qa|stage|demo|uat|prod', 'open-pagerduty-window': 'true|false'}
  repository_dispatch:
    types: [swap_slots]

jobs:
  swap-slots:
    runs-on: [self-hosted, ubuntu-20.04]
    environment: ${{ github.event.inputs.environment || github.event.client_payload.environment }}
    env:
      PAGERDUTY_WINDOW_IN_MIN: 30 # TODO: Verify the length of your PD Maintenance Window
      PAGERDUTY_WINDOW_DESC: 'Deploying Code to ${{ github.event.inputs.environment }} from GitHub Actions' # TODO: Verify this PD Maintenance Window Description
      TARGET_SLOT: 'Production' # TODO: Verify that this is correct.  This is the name azure uses by default.  If you are using a different slot for your main site, update it here
      SOURCE_SLOT: '' # TODO: Add the name of the source slot
      AZ_APP_TYPE: 'webapp' # TODO: If this workflow is for an azure function, change this value to functionapp
      ENVIRONMENT: ${{ github.event.inputs.environment || github.event.client_payload.environment }}
      OPEN_WINDOW: ${{ github.event.inputs.open-pagerduty-window || github.event.client_payload.open-pagerduty-window }}

    steps:
      - run: |
          echo $'
          | Build Arguments | Value                    |
          | ---             |  ---                     |
          | Environment     | `${{ env.ENVIRONMENT }}` |
          | Target Slot     | `${{ env.TARGET_SLOT }}` |
          | Source Slot     | `${{ env.SOURCE_SLOT }}` |
          | Open PD Window  | `${{ env.OPEN_WINDOW }}` |' >> $GITHUB_STEP_SUMMARY
      
      # For more information and best practices on the usage and options available
      # for this action go to: https://github.com/im-open/set-environment-variables-by-scope#usage-instructions
      - name: Set Variables
        uses: im-open/set-environment-variables-by-scope@v1.0.6
        with:
          scope: ${{ env.ENVIRONMENT }}
        env:
          # TODO: For the following inputs, fill in the value if you have the environment and delete the environment if it does not exist
          # This variable is used to swap and delete slots
          RESOURCE_GROUP@dev: ''
          RESOURCE_GROUP@qa: ''
          RESOURCE_GROUP@stage: ''
          RESOURCE_GROUP@demo: ''
          RESOURCE_GROUP@uat: ''
          RESOURCE_GROUP@prod: ''
          # This variable is used to swap and delete slots
          AZ_APP_NAME@dev: ''
          AZ_APP_NAME@qa: ''
          AZ_APP_NAME@stage: ''
          AZ_APP_NAME@demo: ''
          AZ_APP_NAME@uat: ''
          AZ_APP_NAME@prod: ''

      - name: Open a PagerDuty Maintenance Window
        if: env.OPEN_WINDOW == 'true'
        id: open-window
        uses: im-open/open-pagerduty-maintenance-window@v1.1.4
        with:
          pagerduty-api-key: ${{ secrets.PAGERDUTY_API_KEY }} # This is an org-level secret
          description: '${{ env.PAGERDUTY_WINDOW_DESC }}'
          minutes: ${{ env.PAGERDUTY_WINDOW_IN_MIN }}
          service-id: ${{ secrets.PAGERDUTY_SERVICE_ID }} # This is an env-level secret
          #service-ids: '' # TODO: Provide a comma separated list if there are multiple ids. 'PD01,PD02,PD03'

      - name: AZ Login
        id: login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }} # This is an env-level secret

      - name: Swap
        # ARM_SUBSCRIPTION_ID is an env-level secret
        run: |
          az ${{ env.AZ_APP_TYPE }} deployment slot swap \
          --subscription ${{ secrets.ARM_SUBSCRIPTION_ID }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --name ${{ env.AZ_APP_NAME }}  \
          --slot ${{ env.SOURCE_SLOT }} \
          --target-slot ${{ env.TARGET_SLOT }}

      # TODO: Uncomment if you want to destroy the slot after swap.  Delete if you don't.
      # ARM_SUBSCRIPTION_ID is an env-level secret
      # - run: |
      #     az ${{ env.AZ_APP_TYPE }} deployment slot delete \
      #     --slot ${{ env.SOURCE_SLOT }} \
      #     --name ${{ env.AZ_APP_NAME }}  \
      #     --subscription ${{ secrets.ARM_SUBSCRIPTION_ID }} \
      #     --resource-group ${{ env.RESOURCE_GROUP }}

      - name: Azure logout
        if: always() && steps.login.outcome == 'success'
        run: |
          az logout
          az cache purge
          az account clear

      - name: Close the PagerDuty Maintenance Window
        if: always() && env.OPEN_WINDOW == 'true' && steps.open-window.outcome == 'success'
        uses: im-open/close-pagerduty-maintenance-window@v1.0.6
        with:
          pagerduty-api-key: ${{ secrets.PAGERDUTY_API_KEY }} # This is an org-level secret
          maintenance-window-id: ${{ steps.open-window.outputs.maintenance-window-id }}
