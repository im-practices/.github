name: Automatically run tf plan and comment on PR
on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - 'common/**'
      - 'dev/**'
      - 'qa/**'
      - 'stage/**'
      - 'prod/**'

env:
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_ENVIRONMENT: 'public'
  TF_IN_AUTOMATION: 'true'
  TF_VERSION: '~>0.15.5' #TODO:  Verify your version of terraform.
  TF_WORKING_DIR: './dev' # TODO:  Verify this directory is correct for your repository
  SSH_KEY_CENTRAL_LOGGING: ${{secrets.SSH_CENTRAL_LOGGING}}
  SSH_KEY_STORAGE_ACCOUNT: ${{secrets.SSH_STORAGE_ACCOUNT}}
  SSH_KEY_ON_PREM_EGRESS: ${{secrets.SSH_ON_PREM_EGRESS}}

jobs:
  auto-plan-the-tf:
    runs-on: [self-hosted, ubuntu-20.04]

    environment: 'Dev'

    defaults:
      run:
        shell: bash
        working-directory: '${{ env.TF_WORKING_DIR }}'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        id: setup
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: '${{ env.TF_VERSION }}'

      - name: Setup SSH Keys and known_hosts
        uses: im-open/setup-deploy-keys@1.0.1
        with:
          deploy-key-info: |
            [
              { "orgAndRepo": "im-platform/central-logging", "envName" : "SSH_KEY_CENTRAL_LOGGING" },
              { "orgAndRepo": "im-platform/storage-account-network-rules", "envName" : "SSH_KEY_STORAGE_ACCOUNT" },
              { "orgAndRepo": "im-platform/on-prem-egress-ips", "envName" : "SSH_KEY_ON_PREM_EGRESS" }
            ]

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      # TODO:  Remove the pagerduty token if not configuring pagerduty
      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -no-color \
          -var="pagerduty_token=${{secrets.PAGERDUTY_TOKEN}}"
        continue-on-error: true

      - name: 'Terraform Comment'
        uses: actions/github-script@v4
        env:
          PLAN: "\n```\n${{ steps.plan.outputs.stdout }}\n```\n"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            ${process.env.PLAN}
            </details>
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
