# Workflow Code: ScornfulFlamingo_v9   DO NOT REMOVE
# Purpose:
#    Deletes a blob from a specified Azure Storage Account when someone kicks it off manually.
#
# Frequency:
#    - This workflow should only be used once per repository
#
# Projects to use this Template with:
#    - Storage Account Deployments (Core Template)
#
# TODO: Prerequisites:
#    - Ensure each of the repo-level and env-level secrets used in this workflow have been populated by an admin in your repository.
#    - The SP used in this workflow needs an additional permission (StorageBlob Data Contributor) so it can delete blobs
#      https://docs.microsoft.com/en-us/azure/storage/blobs/assign-azure-role-data-access?tabs=portal

name: Delete Azure Blob
run-name: Delete ${{ inputs.environment }} blob ${{ inputs.blob-name }}
# TODO: Evaluate the appropriate triggers
on:
  workflow_dispatch:
    inputs:
      storage-account-name:
        description: The name of the storage account where the blob to delete lives
        required: true
      container-name:
        description: The name of the storage account container where the blob to delete lives
        required: true
      blob-name:
        description: The name of the blob to delete
        required: true
      environment:
        description: The environment to delete the blob from
        required: true
        type: choice
        options: # TODO: Update for the environments that are available
          - dev
          - qa
          - stage
          - demo
          - uat
          - prod

permissions:
  # Required for secretless azure access and deploys
  id-token: write
  contents: read

jobs:
  delete-blob:
    runs-on: im-linux

    environment: ${{ github.event.inputs.environment }}

    steps:
      - run: |
          echo $'
          | Build Arguments | Value                                             |
          | ---             |  ---                                              |
          | Environment     | `${{ github.event.inputs.environment }}`          |
          | Storage Acct    | `${{ github.event.inputs.storage-account-name }}` |
          | Container       | `${{ github.event.inputs.container-name }}`       |
          | Blob Name       | `${{ github.event.inputs.blob-name }}`            |' >> $GITHUB_STEP_SUMMARY

      - name: AZ Login
        id: login
        uses: azure/login@v2
        with:
          # This is an org-level variable
          tenant-id: ${{ vars.ARM_TENANT_ID }}
          # These are env-level variables
          subscription-id: ${{ vars.ARM_SUBSCRIPTION_ID }}
          client-id: ${{ vars.ARM_CLIENT_ID }}

      # For more information and best practices on the usage and options available
      # for this action go to: https://github.com/im-open/set-environment-variables-by-scope#usage-instructions
      - name: Set Variables
        id: set-variables
        uses: im-open/set-environment-variables-by-scope@v1.2
        with:
          scope: ${{ inputs.environment }}
        env:
          # TODO: For the following inputs, fill in the value if you have the environment or delete the environment if it does not exist
          RESOURCE_GROUP@dev: ''
          RESOURCE_GROUP@qa: ''
          RESOURCE_GROUP@stage: ''
          RESOURCE_GROUP@demo: ''
          RESOURCE_GROUP@uat: ''
          RESOURCE_GROUP@prod: ''
          APP_INSIGHTS_NAME@dev: ''
          APP_INSIGHTS_NAME@qa: ''
          APP_INSIGHTS_NAME@stage: ''
          APP_INSIGHTS_NAME@demo: ''
          APP_INSIGHTS_NAME@uat: ''
          APP_INSIGHTS_NAME@prod: ''

      # This call uses RBAC (--auth-mode login) to delete files from the azure storage account.
      # No other key or connection string is needed. In order to delete files from a stg account
      # the SP that authenticates in the step above needs an additional permission (Storage
      # Blob Data Contributor).  Without that permission, this call will not succeed.
      # https://docs.microsoft.com/en-us/azure/storage/blobs/assign-azure-role-data-access?tabs=portal
      - name: Delete Blob
        run: |
          az storage blob delete \
            --auth-mode login \
            --account-name '${{ github.event.inputs.storage-account-name }}' \
            --container-name '${{ github.event.inputs.container-name }}' \
            --name '${{ github.event.inputs.blob-name }}'

      - name: Annotate App Insights
        uses: im-open/create-app-insights-annotation@v1.0
        with:
          subscriptionId: ${{ vars.ARM_SUBSCRIPTION_ID }} # This is an env-level variable
          resourceGroupName: ${{ env.RESOURCE_GROUP }}
          appInsightsResourceName: '${{ env.APP_INSIGHTS_NAME }}'
          category: 'Runbook'
          customMetadata: 'Action=DeleteAzBlob,Blob=${{ inputs.blob-name }},Container=${{ inputs.container-name }},StorageAccount=${{ inputs.storage-account-name }},RunBy=${{ github.actor }},RunID=${{ github.run_id }}'

      - name: Send Delete Blob Event to PagerDuty
        if: always()
        uses: im-open/pagerduty-change-events-action@v1.1
        with:
          integration-key: ${{ secrets.PAGERDUTY_INTEGRATION_KEY }} # This is an env-level secret  # TODO:  Ensure an integration has been created in PagerDuty on each applicable service and the secret added to the environment
          custom-event: '[Runbook] ${{ inputs.container-name }}/${{ inputs.blob-name }} deleted from ${{ inputs.storage-account-name }} (${{ job.status }})'

      - name: Azure logout
        if: always() && steps.login.outcome == 'success'
        run: |
          az logout
          az cache purge
          az account clear
