# Workflow Code: ZestyFlamingo_v17    DO NOT REMOVE
# Purpose:
#    Uses a container to run a K6 stress test against the environment and
#    with the test file the user specifies when they kick it off manually.
#
# Frequency:
#    - This workflow is intended to be reusable, and used once per repository.
#      If the workflow is updated to hardcode some arguments like test-file
#      and test-root-folder instead of taking them in as args, then it could
#      be duplicated, once per k6 project in the repo.
#
# Projects to use this Template with:
#    - App Service or Function (Optional Template)
#    - On-Prem Service         (Optional Template)

name: Run K6 test
run-name: Run ${{ inputs.test-file }} in ${{ inputs.env }}
on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment to run test against'
        required: true
        default: 'dev'
        type: choice
        options: # TODO: Update for the environments your k6 test can be run against
          - dev
          - qa
          - stage
          - load
      test-file:
        description: 'K6 test file to run'
        required: true
        default: '' # TODO: Add default test file  IE: check-health-simple.js
      run-name: # Run name is used to separate load test runs from each other.
        description: 'Run Name: Name of k6 test run in logs and kubernetes.'
        required: true
        default: 'Test-Check-Health' # TODO: Update Default k6 run name.
      k6-paramaters:
        description: 'K6 extra paramaters. IE: -tag product=TEST,family=TEST'
        required: false
      k6-version:
        description: 'K6 version.  Versions lower than 0.32.0 will not work with this action.  Do not include the "v" prefix.'
        required: true
        default: '0.38.3' # TODO: Set default version of k6. IE. 0.38.3
      number-of-runners:
        description: 'Number of Runners: specify number of github self hosted runners.  Max: 10 or maxiumum self hosted linux runners.'
        required: true
        default: '1'
      run-npm-build: # TODO: Delete input if you don't build your k6 tests with npm
        description: 'Run NPM Build: Run npm build to create packages k6 tests'
        required: false
        type: boolean
        default: false # TODO: Set true if you require npm build to run for your k6 bundle to be created

env:
  WORKING_DIRECTORY: './tests/k6' # TODO: Update k6 test folder path
  NODE_VERSION: '16.x' # TODO: Set correct node version or delete if not use npm to build tests
  # InfluxDB addresses -
  # DNS: https://influxdb-v1.mktp.io/loadtesting
  GRAFANA_DASHBOARD_URI: 'https://grafana.mktp.io/d/L8Ilp7C7k/k6-load-testing-results-product-tag-filter?orgId=1' # TODO: Verify link to your dashboard
  K6_DEFAULT_PARAMATERS: '--out influxdb=https://influxdb-v1.mktp.io/loadtesting --insecure-skip-tls-verify --tag NAME=${{ github.event.inputs.run-name }} -e RUN_ENV=${{ github.event.inputs.env }}' # TODO: Set default k6 paramaters

  # TODO: Uncomment if you are using custom k6 binary with k6 extensions installed
  # Update to desired version of releases found in https://github.com/im-practices/performance-testing/releases?q=k6&expanded=true
  # K6_EXTENSION_ASSET_NAME: 'k6-im_0.0.1_linux_amd64.tar.gz'
  # K6_EXTENSION_TAG_NAME: 'k6-v0.0.1'

jobs:
  matrix-setup:
    runs-on: ubuntu-20.04

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: Set Runner Matrix
        id: set-matrix
        uses: actions/github-script@v6
        with:
          script: |
            let matrix = [];
            if(${{ github.event.inputs.number-of-runners }} > 10){
              matrix = ["runner-1"];
              core.setCommandEcho("You selected too many runners.  Please select under 10.");
              core.warning("You selected too many runners.  Please select under 10.");
            }else{
              for (i=1; i<= ${{ github.event.inputs.number-of-runners }}; i++){
                matrix.push(`runner-${i}`);
              }
            }
            const matrixObject = { "runners": matrix };
            core.setCommandEcho("Matrix set: " + JSON.stringify(matrixObject));
            core.setOutput('matrix',JSON.stringify(matrixObject));

      - name: Annotate Test Paramaters
        uses: actions/github-script@v6
        with:
          script: |
            var output = `
              Workflow Inputs =>
                Environment: ${{ github.event.inputs.env }};
                Working Directory: ${{env.WORKING_DIRECTORY }};;
                Test File: ${{ github.event.inputs.test-file }};
                Run Name: ${{ github.event.inputs.run-name }};
                K6 Version: ${{ github.event.inputs.k6-version }};
                Number of Runners: ${{ github.event.inputs.number-of-runners }};
                Run NPM Build: ${{ github.event.inputs.run-npm-build }};
                K6 Paramaters: ${{ github.event.inputs.k6-paramaters }};
                K6 Default Paramaters: ${{ env.K6_DEFAULT_PARAMATERS }};
            `;
            core.notice(`${output}`);

  k6_test:
    runs-on: [self-hosted, ubuntu-20.04]
    needs: [matrix-setup]

    defaults:
      run:
        shell: bash

    strategy:
      matrix: ${{ fromJson(needs.matrix-setup.outputs.matrix) }}

    steps:
      - run: echo "The current environment is ${{ github.event.inputs.env }}"

      - run: echo "${{ needs.matrix-setup.outputs.matrix }}"

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}

      # TODO: Delete if you don't build your k6 tests
      - name: Install Node ${{ env.NODE_VERSION }}
        if: github.event.inputs.run-npm-build == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      # TODO: Delete if you don't build your k6 tests
      - name: NPM Cache
        id: npm-cache
        if: github.event.inputs.run-npm-build == 'true'
        uses: actions/cache@v3
        with:
          path: '${{env.WORKING_DIRECTORY }}/node_modules'
          key: ${{ runner.os }}-modules-k6-${{ hashFiles('${{env.WORKING_DIRECTORY }}/package-lock.json') }}
          restore-keys: ${{ runner.os }}-modules-k6-

      # TODO: Delete if you don't build your k6 tests
      # This step must be modified to support npm workspaces and --ignore-scripts must be used if failures occur on this step with workspaces.
      - name: Install NPM Dependencies
        if: github.event.inputs.run-npm-build == 'true' && steps.npm-cache.outputs.cache-hit != 'true'
        working-directory: ${{env.WORKING_DIRECTORY }}
        run: npm ci

      # TODO: Delete if you don't build your k6 tests
      - name: Build K6 Tests via npm build
        if: github.event.inputs.run-npm-build == 'true'
        working-directory: ${{env.WORKING_DIRECTORY }}
        run: npm run build

      - name: Install K6 Client
        uses: im-open/setup-k6-perf-testing@latest
        with:
          version: ${{ github.event.inputs.k6-version }}
          # TODO: Uncomment lines below if using custom k6 binary with k6 extensions installed
          # extension-token: ${{ secrets.PIPELINE_BOT_PAT }}
          # extension-asset-name: ${{ env.K6_EXTENSION_ASSET_NAME }}
          # extension-tag-name: ${{ env.K6_EXTENSION_TAG_NAME }}
          # extension-repository: 'im-practices/performance-testing'

      - name: Validate test file exists
        run: |
          echo "Checking if test file exists:"
          FILE="./${{env.WORKING_DIRECTORY }}/${{ github.event.inputs.test-file }}"
          if [[ -f $FILE ]]; then
            echo "$FILE exists."
          else
            echo "Could not find test file. $FILE"
            exit 1
          fi

      - name: Run k6 test
        id: k6-run
        working-directory: ${{env.WORKING_DIRECTORY }}
        run: |
          k6_args="${{ github.event.inputs.k6-paramaters }}"

          k6_test_file_tag="--tag test=${{ github.event.inputs.test-file }}"
          # Removing slashes from k6_test_file_tag
          k6_test_file_tag=$(echo $k6_test_file_tag  | tr '/' '-')

          k6_params=""
          if [[ -z k6_args ]]; then
            k6_params="${{ env.K6_DEFAULT_PARAMATERS }} $k6_test_file_tag"
          else
            k6_params="${{ env.K6_DEFAULT_PARAMATERS }} $k6_args $k6_test_file_tag"
          fi

          echo "K6 Parmaters passing in:"
          echo $k6_params
          echo "::notice file=k6.params,line=1,col=1,endColumn=1::$k6_params"

          # Running the test
          k6 run ${{ github.event.inputs.test-file }} $k6_params

      - name: Send Status to Teams - Test Finished
        if: always()
        continue-on-error: true
        uses: im-open/post-status-to-teams-action@v1.3.1
        with:
          title: 'K6 Test for <your project> - ${{ github.event.inputs.run-name }}' # TODO: Update
          workflow-status: ${{ steps.k6-run.outcome }}
          workflow-type: Runbook
          teams-uri: ${{ secrets.MS_TEAMS_URI }} # This is a repo-level secret (unless 'environment:' has been added to the job)
          timezone: ${{ env.TIMEZONE }}
          custom-facts: |
            [
              { "name": "Workflow", "value": "${{ github.workflow }}" },
              { "name": "Run", "value": "${{ github.run_id }}" },
              { "name": "Actor", "value": "${{ github.actor }}" },
              { "name": "Environment", "value": "${{ github.event.inputs.env }}"},
              { "name": "K6 Test", "value": "${{ github.event.inputs.test-file }}" },
              { "name": "K6 Run Name w/Timestamp", "value": "${{ steps.run-k6-operator-test.outputs.run-name }}"}
            ]
          custom-actions: |
            [
              {
                "name": "View Grafana Dashboard",
                "uri": "${{ env.GRAFANA_DASHBOARD_URI }}"
              }
            ]
