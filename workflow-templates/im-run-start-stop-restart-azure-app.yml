# Workflow Code: NeedyPig_v12    DO NOT REMOVE
# Purpose:
#    Performs a start, stop or restart on an app service in the
#    specified environment when someone kicks it off manually.
#
# Frequency:
#    - This workflow should be duplicated once per app service/function in the repo.
#
# Projects to use this Template with:
#    - Azure App Service or Function (Optional Template)
#
# TODO: Prerequisites:
#    - Ensure each of the repo-level and env-level secrets used in this workflow have been populated by an admin in your repository.

name: Runbook - Start, stop or restart Azure App
run-name: ${{ inputs.action }} Azure App in ${{ inputs.environment }}
#TODO:  You may wish to add the name of the app service/function to the names above and the file name if there are multiple app services or functions within the repository

on:
  workflow_dispatch:
    inputs:
      action:
        description: The action that should be taken.
        required: true
        default: restart
        type: choice
        options:
          - start
          - stop
          - restart
      environment:
        description: The environment the app is in
        required: true
        default: prod
        type: choice
        options: # TODO: Update for the environments that are available
          - dev
          - qa
          - stage
          - demo
          - uat
          - prod
env:
  ENVIRONMENT: ${{ github.event.inputs.environment }}
  ACTION: ${{ github.event.inputs.action }}

jobs:
  start-stop-restart:
    runs-on: [self-hosted, ubuntu-20.04]
    environment: ${{ github.event.inputs.environment }} # Use inputs context because env context is not available to environment:

    env:
      AZ_APP_TYPE: 'webapp' # TODO: If this workflow is for an azure function change the value to 'functionapp'

    steps:
      
      - run: |
          echo $'
          | Build Arguments | Value                   |
          | ---             |  ---                    |
          | Environment     | `${{ env.ENVIRONMENT }}`|
          | Action          | `${{ env.ACTION }}`     |' >> $GITHUB_STEP_SUMMARY
              
      # For more information and best practices on the usage and options available
      # for this action go to: https://github.com/im-open/set-environment-variables-by-scope#usage-instructions
      - name: Set Variables
        id: set-variables
        uses: im-open/set-environment-variables-by-scope@v1.1.2
        with:
          scope: ${{ env.ENVIRONMENT }}
        env:
          # TODO: For the following inputs, fill in the value if you have the environment or delete the environment if it does not exist
          RESOURCE_GROUP@dev: ''
          RESOURCE_GROUP@qa: ''
          RESOURCE_GROUP@stage: ''
          RESOURCE_GROUP@demo: ''
          RESOURCE_GROUP@uat: ''
          RESOURCE_GROUP@prod: ''
          APP_NAME@dev: ''
          APP_NAME@qa: ''
          APP_NAME@stage: ''
          APP_NAME@demo: ''
          APP_NAME@uat: ''
          APP_NAME@prod: ''
          # TODO: If this workflow is restarting a slot update these values, otherwise delete this section.
          # TODO: If the slot has the same name in all environments, delete this section and populate the env.SLOT_NAME in the job below with the single value
          # SLOT_NAME@dev: ''
          # SLOT_NAME@qa: ''
          # SLOT_NAME@stage: ''
          # SLOT_NAME@demo: ''
          # SLOT_NAME@uat: ''
          # SLOT_NAME@prod: ''

      - run: echo "'${{ env.ACTION }}' will be peformed on ${{ env.ENVIRONMENT }} ${{ env.APP_NAME }}"

      - name: AZ Login
        id: login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }} # This is an env-level secret

      # TODO: if you wish to perform any of the following actions on a slot, append the following to each of the commands: --slot ${{ env.SLOT_NAME }}

      - name: start
        if: env.ACTION == 'start'
        # ARM_SUBSCRIPTION_ID is an env-level secret
        run: az ${{ env.AZ_APP_TYPE }} start --name ${{ env.APP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --subscription ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: stop
        if: env.ACTION == 'stop'
        # ARM_SUBSCRIPTION_ID is an env-level secret
        run: az ${{ env.AZ_APP_TYPE }} stop --name ${{ env.APP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --subscription ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: restart
        if: env == 'restart'
        # ARM_SUBSCRIPTION_ID is an env-level secret
        run: az ${{ env.AZ_APP_TYPE }} restart --name ${{ env.APP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --subscription ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Azure logout
        if: always() && steps.login.outcome == 'success'
        run: |
          az logout
          az cache purge
          az account clear
