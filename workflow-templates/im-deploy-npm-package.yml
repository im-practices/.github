name: 'Package Push npm Workflow'

# Note: This workflow has a couple of steps that can be used for determining the version:
# - use package.json value,
# - use current git tag value,
# - increment current git tag value,
# - or a workflow input
# Choose the appropriate strategy and delete the others.  If the version hasn't been incremented properly this action may fail if duplicate versions are detected.

on:
  # TODO:  Verify triggers
  pull_request:
    types: [closed]
  workflow_dispatch:
    inputs:
      version:
        description: 'The version for the new published package'

# TODO:  Make sure the package.json file has been updated with the appropriate values required for GH Packages
# https://github.com/im-practices/git-er-done/blob/main/packages/publish-npm.md

jobs:
  publish-to-gpr:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' # TODO:  Update if using a different trigger
    runs-on: [self-hosted, ubuntu-20.04]
    defaults:
      run:
        shell: bash
        working-directory: '' # TODO:  Add the path to the project that generates an npm package
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 12 # TODO: verify node version
          registry-url: https://npm.pkg.github.com/

      # TODO:  If the project contains dependencies to other npm packages in GitHub's npm package registry, uncomment this step, otherwise delete
      # - name: Authenticate with GitHub Packages for Restoring Packages
      #   uses: im-open/authenticate-with-gh-package-registries@v1.0.1
      #   with:
      #     github-token: ${{ secrets.READ_PKG_TOKEN }} # This is an org level secret

      # TODO:  This can be used if you want this workflow to get the current git tag to use as the package version.  Delete if you are using another version method.
      # - name: Set Tag to current git tag
      #   uses: im-open/git-tag@v1.0.1
      #   with:
      #     github-token: ${{secrets.GITHUB_TOKEN}}
      #     prefix: '' # TODO:  Add the prefix value if you are using it.  Some projects include db- or bff- as the prefix on their tags.

      # TODO:  This can be used if you want to use git tags for the version and you want this workflow to be the one that increments the version.  Delete if you are using another version method.
      # - name: Set Tag to current git tag plus 1 and push tag to repo
      #   uses: im-open/git-tag@v1.0.1
      #   with:
      #     github-token: ${{secrets.GITHUB_TOKEN}}
      #     push-new-tag-to-repo: true
      #     increment-patch: true
      #     prefix: '' # TODO:  Add the prefix value if you are using it.  Some projects include db- or bff- as the prefix on their tags.

      # TODO:  If you are using anything for the version that isn't the existing package.json value, uncomment the appropriate step so the package.json version is updated
      # - run: npm version ${{ env.TAG }}
      # - run: npm version ${{ github.event.inputs.version }}

      - run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
