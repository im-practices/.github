# Workflow Code: ZestyAligator_v20   DO NOT REMOVE
# Purpose:
#    Runs K6 tests at scale in Azure Kubernetes.
#    With the workflow the user specifies when they kick it off manually.
#
# Frequency:
#    - This workflow is intended to be reusable, and used once per repository.
#
# Projects to use this Template with:
#    - App Service or Function (Optional Template)
#    - On-Prem Service         (Optional Template)
# # TODO: Prerequisites:
#    - Ensure each of the repo-level MS_TEAMS_URI and env-level secrets used in this workflow have been populated by an admin in your repository.

name: 🧪️ Run K6 Operator Test
run-name: Run K6 Operator Test to ${{ inputs.env }} with test ${{ inputs.test-file }}

on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment to run test against [dev, qa, stage]'
        required: true
        type: choice
        options: # TODO: Update for the environments that are available.
          - dev
          - qa
          - load
          - stage
          - demo
      run-name: # Run name is used to separate load test runs from each other.
        description: 'Run Name: Name of k6 test run in logs and kubernetes.'
        required: true
        default: 'Test-Check-Health' # TODO: Update Default k6 run name.
      test-file:
        description: 'Test Filename: K6 js test file to run. Please include .js extension'
        required: true
        default: 'check-health-simple.js' # TODO: Update default test file
      upload-type:
        description: 'Upload Type: Type of upload for configmap upload.'
        required: true
        default: test-file # TODO: Update to default upload type
        type: choice
        options:
          - test-file # When running single test file
          - single-folder # When your tests reside in a single folder without dependencies
          - multiple-files # When you have multiple files even in different folders
          - multiple-folders # When you have multiple folders such as config and test-file folders
          - working-directory # Upload the whole directory you specified in the working directory input
      upload-files-folder:
        description: 'Upload Files or Folders: Comma separated list of files or folders to include in the upload. Specify full path from working-directory root.'
        required: false
        default: '' # TODO: Update to default upload file or folder
      k6-parameters:
        description: 'K6 parameters:  This includes any tags or config files.'
        required: false
        default: '--tag product=TEST,family=TEST' # TODO: Update default tags for grafana dashboard filtering.
      parallelism:
        description: 'Parallelism: Number of Kubernetes Pods to run k6 tests on.'
        required: false
        default: '1'
      separate-nodes:
        description: 'Dedicated Node: Run each pod on individual node(VM). Warning: Coordinate with SRE before enabling.'
        required: false
        type: boolean
        default: false
      run-npm-build: # TODO: Delete input if you don't build your k6 tests with npm
        description: 'Run NPM Build: Run npm build to create packages k6 tests'
        required: false
        type: boolean
        default: false # TODO: Set true if you require npm build to run for your k6 bundle to be created
      loop-count:
        description: 'Loop Count: Number of loops to wait for test to complete.'
        required: false
        default: '50'

permissions:
  # Required for secretless azure access and deploys
  id-token: write
  contents: read

env:
  TIMEZONE: 'america/denver' # TODO: Verify timezone
  WORKING_DIRECTORY: './tests/k6' # TODO: Update k6 test folder path
  GRAFANA_DASHBOARD_URI: 'https://grafana.mktp.io/d/L8Ilp7C7k/k6-load-testing-results-product-tag-filter?orgId=1' # TODO: Verify link to your dashboard
  NODE_VERSION: '16.x' # TODO: Set correct node version
  LOOP_DURATION: '1m' # TODO: Update duration of loop to your specification.  The action im-practices/run-k6-operator-test documenation has more details on setting this parameter.

  # TODO: Add --out influxdb=\"https://influxdb-v1.mktp.io/loadtesting\" to K6_DEFAULT_PARAMATERS if you want test results in grafana.
  K6_DEFAULT_PARAMETERS: '--insecure-skip-tls-verify --tag NAME=${{ inputs.run-name }},product=TEST,family=pf -e RUN_ENV=${{ inputs.env }}' # TODO: Set default k6 parameters specifically replace product and family tags.
  RETENTION_IN_DAYS: 1 # TODO: Set retention in days for uploaded artifacts
  K6_CONTAINER_IMAGE: 'perftest/k6:latest' # TODO: Update to k6 image version if using custom binary.  Uncomment reference in Run K6-Operator Test step to use.

  ###### DO NOT EDIT ######
  PRIVATE_CONTAINER_REGISTRY: 'bdaimdna26corecr1.azurecr.io'
  CLUSTER_NAME: 'BDAIM-D-NA26-PERFTEST-K8-CL'
  CLUSTER_RESOURCE_GROUP: 'BDAIM-D-NA26-PerformanceTesting-RGRP'
  ###### DO NOT EDIT ######

jobs:
  # TODO: Delete if you don't build your k6 tests
  npm-cache:
    runs-on: [self-hosted, coldstone, build-npm-nuget-cache]
    if: inputs.run-npm-build

    defaults:
      run:
        shell: bash

    env:
      NPM_HASH_FILE: ${{ './${{ env.WORKING_DIRECTORY }}/package-lock.json' }}

    outputs:
      NPM_CACHE_key: ${{ env.NPM_CACHE_KEY }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}

      - name: Annotate Inputs
        run: |
          echo $'
          | Input Name            | Value                    |
          | ---                   |  ---                     |
          | Environment           | `${{ inputs.environment }}` |
          | Workflow Branch/Tag    | `${{ github.ref_name }}` - SHA: `${{ github.sha }}` |
          | Working Directory     | `${{ env.WORKING_DIRECTORY }}` |
          | Test File             | `${{ inputs.test-file }}` |
          | Parallelism           | `${{ inputs.parallelism }}` |
          | Separate-nodes        | `${{ inputs.separate-nodes }}` |
          | Upload Type           | `${{ inputs.upload-type }}` |
          | Upload File/Folders   | `${{ inputs.upload-files-folder}}` |
          | K6 Parameters         | `${{ inputs.k6-parameters }}` |
          | K6 Default Parameters | `${{ env.K6_DEFAULT_PARAMETERS }}`  |
          | Loop Count            | `${{ inputs.loop-count }}` |
          | Loop Duration         | `${{ env.LOOP_DURATION }}` |
          | Run NPM Build         | `${{ inputs.run-npm-build }}` |' >> $GITHUB_STEP_SUMMARY

      - name: Set Cache Keys
        # As long as these files don't change the cache will remain in tact and the time
        # to restore the different packages in the various jobs will be reduced.  If one
        # of the files does change though, a new cache will be uploaded the next time
        # it runs, then subsequent runs should be faster.
        run: echo "NPM_CACHE_KEY=k6_node_modules-${{ hashFiles('./tests/k6/package-lock.json') }}" >> $GITHUB_ENV

      - name: Check for an npm cache
        id: has-cache
        uses: im-open/check-for-cache@v1.1.2
        with:
          path: '**/k6/node_modules'
          key: ${{ env.NPM_CACHE_KEY }}

      # The remaining steps will only be executed if the cache was not found, otherwise they will be skipped.

      # This action creates a post-job step that will upload the node_modules dir to the cache if the job
      # completes successfully.  Subsequent jobs and workflow runs can use this cached version of the node_modules
      # folder if the package-lock.json hasn't changed and it uses a im-linux runner to restore the cache from.
      # TODO: Delete if you don't build your k6 tests
      - name: Install Node ${{ env.NODE_VERSION }}
        if: steps.has-cache.outputs.cache-hit == 'false'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup caching for node_modules directory
        if: steps.has-cache.outputs.cache-hit == 'false'
        uses: actions/cache@v3.2.6
        with:
          key: ${{ env.NPM_CACHE_KEY }}
          path: '**/k6/node_modules'
          enableCrossOsArchive: true

      # TODO:  If the project contains internal npm packages, uncomment and update the orgs with the needed organizations
      # - name: Authenticate with GitHub Packages
      #   if: steps.has-cache.outputs.cache-hit == 'false'
      #   uses: im-open/authenticate-with-gh-package-registries@v1.0
      #   with:
      #     read-pkg-token: ${{ secrets.READ_PKG_TOKEN }} # This is an org-level secret
      #     orgs: ''

      - name: NPM Install
        if: steps.has-cache.outputs.cache-hit == 'false'
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: |
          echo "Installing NPM"
          npm ci

  run_k6_operator:
    runs-on: [self-hosted, im-linux]
    needs: [npm-cache] # TODO: Delete if you don't build your k6 tests
    environment: ${{ inputs.env }}

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}

      # TODO: Delete if you don't build your k6 tests
      - name: Install Node ${{ env.NODE_VERSION }}
        if: inputs.run-npm-build
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      # TODO: Delete if you don't build your k6 tests
      - name: Download npm cache
        uses: actions/cache/restore@v3.2.6
        if: inputs.run-npm-build
        with:
          key: ${{ needs.npm-cache.outputs.NPM_CACHE_KEY }}
          path: '**/k6/node_modules'
          enableCrossOsArchive: true
          fail-on-cache-miss: true

      # TODO: Delete if you don't build your k6 tests
      - name: Rebuild Node Modules
        if: inputs.run-npm-build
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm rebuild

      # TODO: Delete if you don't build your k6 tests
      - name: Build K6 Tests via npm build
        if: inputs.run-npm-build
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm run build

      - name: AZ Login
        uses: azure/login@v1
        with:
          # This is an org-level variable
          tenant-id: ${{ vars.ARM_TENANT_ID }}
          # These are env-level variables
          subscription-id: ${{ vars.ARM_SUBSCRIPTION_ID }}
          client-id: ${{ vars.ARM_CLIENT_ID }}

      - name: Setup kubectl config
        working-directory: ${{ env.WORKING_DIRECTORY }}
        id: kube-config
        run: |
          base_path=$(pwd)
          kube_config_file_path="$base_path/.kube/config-sp"
          export KUBECONFIG=$kube_config_file_path
          az aks get-credentials --name ${{ env.CLUSTER_NAME }} --resource-group ${{ env.CLUSTER_RESOURCE_GROUP }} --format exec --overwrite-existing --public-fqdn --file $kube_config_file_path
          kubelogin convert-kubeconfig --login azurecli --kubeconfig $kube_config_file_path

          echo "kube-config-file=$kube_config_file_path" >> $GITHUB_OUTPUT

          powerstate=$(az aks show --name ${{ env.CLUSTER_NAME }} --resource-group ${{ env.CLUSTER_RESOURCE_GROUP }} --query 'powerState.code' --out tsv)
          echo "cluster-powerstate=$powerstate" >> $GITHUB_OUTPUT
          echo "::notice title=Cluster Power State::Cluster Power State - $powerstate"

      - name: Stop test if Cluster is off
        if: steps.kube-config.outputs.cluster-powerstate != 'Running'
        run: exit 1

      - name: Send Status to Teams - Starting Test
        continue-on-error: true
        uses: im-open/post-status-to-teams-action@v1.3
        with:
          title: 'K6 Test Starting Shortly in AKS - ${{inputs.run-name }}'
          workflow-status: started
          workflow-type: Runbook
          teams-uri: ${{ vars.MS_TEAMS_URI }} # This is a repo-level secret (unless 'environment:' has been added to the job)
          timezone: ${{ env.TIMEZONE }}
          custom-facts: |
            [
              { "name": "Workflow", "value": "${{ github.workflow }}" },
              { "name": "Run", "value": "${{ github.run_id }}" },
              { "name": "Actor", "value": "${{ github.actor }}" },
              { "name": "Environment", "value": "${{ inputs.env }}"},
              { "name": "K6 Test", "value": "${{ inputs.test-file }}" }
            ]
          custom-actions: |
            [
              {
                "name": "View Grafana Dashboard",
                "uri": "${{ env.GRAFANA_DASHBOARD_URI }}"
              }
            ]

      - name: Clean Test File Name for K6 Tag
        id: test-tag
        run: |
          k6_test_file_tag="--tag test=${{ inputs.test-file }}"
          # Removing slashes from k6_test_file_tag
          k6_test_file_tag=$(echo $k6_test_file_tag  | tr '/' '-')
          echo "test-tag=$k6_test_file_tag" >> $GITHUB_OUTPUT

      - name: Run K6-Operator Test
        uses: im-practices/run-k6-operator-test@latest
        id: run-k6-operator-test
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}
          test-file: ${{ inputs.test-file }}
          run-name: ${{ inputs.run-name }}
          upload-type: ${{ inputs.upload-type}}
          upload-files-folder: ${{ inputs.upload-files-folder }}
          k6-parameters: '${{ inputs.k6-parameters }}'
          k6-default-parameters: '${{ env.K6_DEFAULT_PARAMETERS }} ${{ steps.test-tag.outputs.test-tag }}'
          parallelism: ${{ inputs.parallelism }}
          kube-config-file-path: ${{ steps.kube-config.outputs.kube-config-file }}
          retention-in-days: ${{ env.RETENTION_IN_DAYS }}
          loop-count: ${{ inputs.loop-count }}
          loop-duration: ${{ env.LOOP_DURATION }}
          # k6-extension-image: '${{ env.PRIVATE_CONTAINER_REGISTRY }}/${{ env.K6_CONTAINER_IMAGE }}' # TODO: uncomment to use custom k6 binary with k6 extensions installed
          # pod-log-lines-gha-output: 500 # TODO: uncomment if you want to change the number of lines in github actions that the pod logs output.
          # pod-log-lines-file-output: 3000 # TODO: uncomment if you want to change the number of lines to file that the pod logs output.

      ### Cleanup K6-Operator test if workflow is cancelled ###

      # Due to composite actions not supporting post steps, the following workflow steps are required to stop a k6-operator mid stream.
      - name: Upload K6 Deployment Yaml if Cancelled
        if: cancelled()
        continue-on-error: true
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.run-k6-operator-test.outputs.deploy-yaml-artifact }}-bk
          path: ${{ env.WORKING_DIRECTORY }}/${{ steps.run-k6-operator-test.outputs.run-name }}.yaml
          retention-days: ${{ env.RETENTION_IN_DAYS }}

      - name: Stop Test and Cleanup if Workflow is Cancelled
        if: cancelled()
        continue-on-error: true
        shell: bash
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: |
          #  Cleanup Test Deploy and Configmap

          echo ""
          echo "Deleting configmap: ${{ steps.run-k6-operator-test.outputs.config-map-name }}"
          kubectl delete configmap ${{ steps.run-k6-operator-test.outputs.config-map-name }} --kubeconfig ${{ steps.kube-config.outputs.kube-config-file }} --namespace k6testing

          echo ""
          echo "Listing folder contents to validate that ${{ steps.run-k6-operator-test.outputs.run-name }}.yaml exists"
          ls -la ${{ steps.run-k6-operator-test.outputs.run-name }}.yaml

          echo ""
          echo "Deleting runner pods for ${{ steps.run-k6-operator-test.outputs.run-name }}"
          kubectl delete --kubeconfig ${{ steps.kube-config.outputs.kube-config-file }} -f ${{ steps.run-k6-operator-test.outputs.run-name }}.yaml

          rm -f ${{ steps.run-k6-operator-test.outputs.run-name }}.yaml

      ### Cleanup K6-Operator test if workflow is cancelled ###
      - name: Azure logout
        if: always()
        continue-on-error: true
        run: |
          az logout
          az cache purge
          az account clear

      - name: Remove kubectl config
        if: always()
        shell: bash
        working-directory: ${{ env.WORKING_DIRECTORY }}
        continue-on-error: true
        run: |
          # Remove kubectl config
          rm -rf ${{ steps.kube-config.outputs.kube-config-file }}

      - name: Send Status to Teams - Test Finished
        if: always()
        continue-on-error: true
        uses: im-open/post-status-to-teams-action@v1.3
        with:
          title: 'K6 Test in AKS Complete - ${{ inputs.run-name }}'
          workflow-status: ${{ steps.run-k6-operator-test.outcome }}
          workflow-type: Runbook
          teams-uri: ${{ vars.MS_TEAMS_URI }} # This is a repo-level secret (unless 'environment:' has been added to the job)
          timezone: ${{ env.TIMEZONE }}
          custom-facts: |
            [
              { "name": "Workflow", "value": "${{ github.workflow }}" },
              { "name": "Run", "value": "${{ github.run_id }}" },
              { "name": "Actor", "value": "${{ github.actor }}" },
              { "name": "Environment", "value": "${{ inputs.env }}"},
              { "name": "K6 Test", "value": "${{ inputs.test-file }}" },
              { "name": "K6 Run Name w/Timestamp", "value": "${{ steps.run-k6-operator-test.outputs.run-name }}"},
              { "name": "K6 Cluster Powerstate", "value": "${{ steps.kube-config.outputs.cluster-powerstate }}"}
            ]
          custom-actions: |
            [
              {
                "name": "View Grafana Dashboard",
                "uri": "${{ env.GRAFANA_DASHBOARD_URI }}"
              }
            ]
