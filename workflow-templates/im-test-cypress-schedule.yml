# Workflow Code: SurprisedHedgehog_v22    DO NOT REMOVE
# Purpose:
#    Runs Cypress UI Health Check tests in Github Actions on a schedule.
#    With the workflow you specify when to run this test.
#
# Frequency:
#    - This workflow is intended to be reusable, and used once per repository.
#
# Projects to use this Template with:
#    - Testing projects that use Cypress.
#
# TODO Prerequisites:
#    - Add secret APPLICATIONINSIGHTS_CONNECTION_STRING to every environment you are testing.
#    - Update your cypress test config to include the im.exporttoappinsights package. Instructions found here: https://github.com/im-practices/techhub/blob/main/docs/Azure/content/Health-Checks/Cypress-UI-Health-Check.md
#    - If the project contains a local nuget.config remove it.  It interferes with restoring packages on the GitHub Action runners.
#    - In order to use this workflow a few changes need to be made to the cypress test configuration:
#      1. Make the following npm package changes in your cypress test directory
#         npm uninstall mocha-teamcity-reporter
#         npm install --save-dev mochawesome mochawesome-merge mochawesome-report-generator
#      2. Modify the cypress run section of the ci script by replacing the '--reporter ./mocha-teamcity-reporter' with '--reporter mochawesome --reporter-options overwrite=false,html=false,json=true'. For instance:
#         old: "cy:ci" : "....&& cypress run --project ./ --reporter ./mocha-teamcity-reporter \"",
#         new: "cy:ci" : "....&& cypress run --project ./ --reporter mochawesome --reporter-options overwrite=false,html=false,json=true \"",
#      3. Add the following pre-ci script.  Your name will vary based on your cypress ci script name.  This removes results between test runs.
#         "precy:ci": "rm -rf mochawesome-report/",
#      4. Add the following script that merges all test json files and generates an html report.  Your name may vary based on your project conventions.  If the output file or results dir are changed, update the env values in the workflow.
#         "cy:report": "mochawesome-merge mochawesome-report/*.json > merged-results.json && marge --reportDir cypress-results merged-results.json",
#                                                                                             ^^ marge is not a typo, it's a command for the "mochawesome report generator"

name: ðŸ§ª Run Cypress on Schedule
run-name: ðŸ§ª Run Cypress on Schedule

# TODO: Verify Triggers
on:
  schedule: # TODO: Update the schedule to run at the desired frequency. Do not run more than every 30 minutes as to not produce undue load on the system.
    - cron: '59 * * * *' # Run Every hour # TODO: Update the frequency of the schedule.  Do not run more than every 30 minutes as to not produce undue load on the system.
    # - cron: '1/30 * * * *' # Run Every 30 minutes # TODO: Uncomment this line if you want to run every 30 minutes.
    # - cron: '1/40 * * * *' # Run Every 40 minutes # TODO: Uncomment this line if you want to run every 40 minutes.

env:
  GITHUB_REF: 'main' # Default branch to run against.
  READ_PKG_TOKEN: ${{ secrets.READ_PKG_TOKEN }} # This is an org-level secret
  JS_TEST_DIR: '' # TODO: Set to the directory containing the js tests like tests/cypress.
  NODE_VERSION: '' # TODO: Update this to the version of node you want to use for the tests
  CYPRESS_CI_SCRIPT: '' # TODO: Add cypress script name, example: 'cy:run:healthcheck:dev'.
  CYPRESS_REPORT_SCRIPT: 'cy:report' #TODO:  Add the name of the npm script that merges the files and creates an html report, if you copied the one above it is cy:report
  CYPRESS_RESULTS_FILE: 'merged-results.json' # TODO: Update this value if it was added as something different in the npm report script
  CYPRESS_REPORT_DIR: 'cypress-results' # TODO: Update this value if it was added as something different in the npm report script
  CYPRESS_SCREENSHOTS: 'cypress/screenshots' # TODO: Update this value if it was added as something different in the npm report script

jobs:
  run-cypress:
    runs-on: im-linux
    strategy:
      matrix:
        environment: [dev, qa, stage] # TODO: Add environments you want your tests to run in

    defaults:
      run:
        shell: bash
        working-directory: ${{ env.JS_TEST_DIR }}

    environment: ${{ matrix.environment }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ env.GITHUB_REF }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Authenticate with GitHub Packages
        uses: im-open/authenticate-with-gh-package-registries@v1.1
        with:
          read-pkg-token: ${{ secrets.READ_PKG_TOKEN }} # This is an org-level secret
          orgs: 'im-enrollment,im-practices' # TODO: Verify list of orgs packages will be pulled from

      - name: Restore npm packages
        working-directory: ${{ env.JS_TEST_DIR }}
        run: npm ci

      - name: Run cypress
        id: cypress
        continue-on-error: true
        run: npm run ${{ env.CYPRESS_CI_SCRIPT }}
        env:
          APPLICATIONINSIGHTS_CONNECTION_STRING: ${{ secrets.APPLICATIONINSIGHTS_CONNECTION_STRING }}

      - name: Merge json files and create html report
        run: npm run ${{ env.CYPRESS_REPORT_SCRIPT }}

      - name: Create Status check based on merged cypress results
        id: process-cypress
        uses: im-open/process-cypress-test-results@v3.0.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }} # Special per-job token generated by GH for interacting with the repo
          results-file: '${{ env.JS_TEST_DIR }}/${{ env.CYPRESS_RESULTS_FILE }}'
          report-name: 'Cypress ${{ github.run_number }}'
          # TODO: Verify whether you want status checks or pr comments with the results.
          create-status-check: false
          create-pr-comment: false
          ignore-test-failures: true
          timezone: 'america/denver' # TODO: Verify timezone

      - name: Upload cypress screenshots if there are test failures
        if: steps.cypress.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: Cypress Test Screenshots ${{ github.run_number }}-${{ matrix.environment }}
          path: ${{ env.JS_TEST_DIR }}/${{ env.CYPRESS_SCREENSHOTS }}/
          if-no-files-found: ignore
          retention-days: 5 # Cannot exceed 30 days.

      - name: Upload Cypress Results Report
        uses: actions/upload-artifact@v4
        with:
          name: Cypress Results ${{ github.run_number }}-${{ matrix.environment }}
          path: |
            ${{ env.JS_TEST_DIR }}/${{ env.CYPRESS_REPORT_DIR }}/
            ${{ env.JS_TEST_DIR }}/${{ env.CYPRESS_RESULTS_FILE }}
          retention-days: 5 # Cannot exceed 30 days.

      - name: Fail if cypress errors
        if: steps.cypress.outcome == 'failure'
        run: |
          echo "The cypress tests have failures"
          exit 1
